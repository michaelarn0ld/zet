#!/usr/bin/python3

import boto3

def add_to_whitelist(items):
    while True:
        confirm_item_bool = False
        new_item = input('Please enter the zettel id you want to add to the whitelist: ')
        while True:
            confirm_item = input(f'Please confirm that you want to add {new_item} to the whitelist (y/n): ').lower()
            if confirm_item == 'y':
                confirm_item_bool = True
                break
            elif confirm_item == 'n':
                confirm_item_bool = False
                break
            print('\nError: you must input either of (y/n)\n')
        if confirm_item_bool:
            items.append(new_item)
        while True:
            user_continue = input(f'Current whitelist is {items}, do you want to continue to add more items? (y/n): ').lower()
            if user_continue == 'n': return
            elif user_continue == 'y': break
            print('\nError: you must input either of (y/n)\n')


def remove_from_whitelist(items):
    for i in range(len(items)):
        while True:
            remove_item = input(f'Do you want to remove \'{items[i]}\' from the whitelist? (y/n): ').lower()
            if remove_item == 'y': 
                items[i] = None 
                break
            elif remove_item == 'n': break
            print('\nError: you must input either of (y/n)\n')


client = boto3.client('dynamodb')
response = client.query(
        TableName='ZettelWhitelist',
        KeyConditionExpression='whitelist = :whitelist',
        ExpressionAttributeValues={
            ':whitelist': {'S': 'PRIMARY'}
        }
    )
items = [item['S'] for item in response['Items'][0]['zettelValues']['L']]

while True:
    print(f'Current whitelist is: {items}')
    user_query = input('Do you want to modify this? (y/n): ').lower()
    if user_query == 'n': exit()
    elif user_query == 'y': break
    print('\nError: you must input either of (y/n)\n')

while True:
    modification = input('Do you want to add or remove items from the whitelist? (add/remove): ').lower()
    if modification == 'add':
        add_to_whitelist(items)
        break
    elif modification == 'remove':
        remove_from_whitelist(items)
        break
    print('\nError: you must input either of (add/remove)\n')

items = [item for item in items if item]
print(f'\nCurrent whitelist is now: {items}')

while True:
    confirm_changes = input('Please confirm that you want to apply these changes (y/n): ').lower()
    if confirm_changes == 'n': quit()
    elif confirm_changes == 'y': break
    print('\nError: you must input either of (y/n)\n')

items_list = [{'S': item} for item in items]
items_dict = {'L': items_list}
update = client.update_item(
        TableName='ZettelWhitelist',
        Key={'whitelist': {'S': 'PRIMARY'}},
        UpdateExpression='SET zettelValues = :newValues',
        ExpressionAttributeValues={':newValues': items_dict},
        ReturnValues='UPDATED_NEW'
    )
